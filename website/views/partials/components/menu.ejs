<div id="button-menu" class="glass button-menu">
    <%- include('../icons/Bars'); %>
</div>

<div id="menu" class="glass menu hidden"></div>

<style>
    .button-menu {
        position: fixed;
        top: 20px;
        right: 20px;
        width: 40px;
        height: 40px;
        box-sizing: border-box;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        z-index: 100;
        transition: background 0.25s, right 0.5s, border-width 0.3s,
            border-color 0.3s;
    }

    .button-menu.active {
        right: 220px;
        border-color: var(--accent-color);
        border-width: 2px;
    }

    .button-menu svg {
        fill: rgb(255, 255, 255);
        height: 28px;
        width: auto;
    }

    #desktop .button-menu:hover {
        background: var(--accent-color);
    }

    .menu {
        position: fixed;
        top: 0;
        right: 0;
        width: 200px;
        height: 100vh;
        z-index: 300;
        transition: right 0.5s;
        border-radius: 0;
    }
    .menu.hidden {
        right: -200px;
    }
</style>

<script>
    (() => {
        const buttonMenu = document.getElementById('button-menu');
        const menu = document.getElementById('menu');
        const sections = document.getElementsByClassName('section full');

        function openMenu() {
            buttonMenu.classList.add('active');
            menu.classList.remove('hidden');

            for (const section of sections) {
                section.style.transition = 'width 0.5s';
                section.style.width = 'calc(100% - 200px)';
            }

            checkMenu();
        }

        function closeMenu() {
            buttonMenu.classList.remove('active');
            menu.style.right = '-200px';

            for (const section of sections) {
                section.style.transition = 'width 0.5s';
                section.style.width = '100%';
                setTimeout(() => {
                    section.removeAttribute('style');
                }, 500);
            }

            setTimeout(() => {
                menu.classList.add('hidden');
                menu.removeAttribute('style');
            }, 500);

            checkMenu();
        }

        function checkMenu() {
            setTimeout(() => {
                if (
                    buttonMenu.classList.contains('active') &&
                    menu.classList.contains('hidden')
                ) {
                    closeMenu();
                }
            }, 510);
        }

        document.addEventListener('click', (event) => {
            if (event.target.closest('#menu')) {
                return;
            }

            if (event.target.closest('#button-menu')) {
                return;
            }

            if (buttonMenu.getAttribute('last-click') !== null) {
                return;
            }

            closeMenu();
        });

        window.addEventListener('resize', () => {
            if (menu.classList.contains('hidden')) return;
            closeMenu();
        });

        buttonMenu.addEventListener('click', () => {
            if (
                buttonMenu.getAttribute('last-click') &&
                Date.now() - buttonMenu.getAttribute('last-click') < 510
            )
                return;

            buttonMenu.setAttribute('last-click', Date.now());

            setTimeout(() => {
                buttonMenu.removeAttribute('last-click');
            }, 500);

            if (menu.classList.contains('hidden')) {
                openMenu();
            } else {
                closeMenu();
            }
        });
    })();
</script>
